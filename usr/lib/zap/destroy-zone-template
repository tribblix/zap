#!/bin/ksh
#
# SPDX-License-Identifier: CDDL-1.0
#
# {{{ CDDL HEADER
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source. A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# }}}
#
# Copyright 2024 Peter Tribble
#

#
# destroy zone template, both the template definition and the file system
# configured for it
#
# Usage:
#
#  -T name of template
#  -n show what would be done instead of doing it
#

while getopts "nT:" opt; do
case $opt in
T)
	TNAME="$OPTARG"
	;;
n)
	DEBUG="echo"
	;;
*)
	exit 2
	;;
esac
done

if [[ -z $TNAME ]]; then
   echo "ERROR: template name must be specified"
   exit 2
fi

#
# the naming convention for the template adds a TRIBtemplate- prefix
# check it exists
#
TBRANDFILE="/etc/zones/TRIBtemplate-${TNAME}.xml"
if [ ! -f "$TBRANDFILE" ]; then
    echo "ERROR: Template $TNAME not found"
    exit 1
fi

UDIR=$(/usr/bin/grep 'directory=\"/usr\"' "${TBRANDFILE}" | /usr/bin/awk '{print $2}' | /usr/bin/awk -F= '{print $2}' | sed 's:"::g')
UROOT=${UDIR%/usr}
ZLIST=$(/usr/bin/grep 'special=\"'${UDIR}'\"' /etc/zones/*.xml | /usr/bin/grep -v '^'$TBRANDFILE| /usr/bin/awk -F: '{print $1}')

if [[ -n $ZLIST ]]; then
  echo "ERROR: template ${TNAME} is used by the following zones:"
  for ZFILE in $ZLIST
  do
    ZNAME=${ZFILE#/etc/zones/}
    ZNAME=${ZNAME%.xml}
    echo "  $ZNAME"
  done
  exit 1
fi

#
# This is the backing zfs dataset
#
ZDPARENT=$(/usr/sbin/zfs list -H "${UROOT}" | /usr/bin/awk '{print $1}')

#
# Sanity check: the zfs dataset should end in the template name
#
ZFNAME=${ZDPARENT##*/}
if [ "X$ZFNAME" != "X$TNAME" ]; then
  echo "ERROR: zfs dataset $ZDPARENT does not match the template $TNAME"
  exit 1
fi

#
# remove the template file and destroy the backing dataset
#
$DEBUG /usr/bin/rm -f "${TBRANDFILE}"
$DEBUG /usr/sbin/zfs destroy -r "${ZDPARENT}"
