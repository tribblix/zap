#!/bin/ksh
#
# SPDX-License-Identifier: CDDL-1.0
#
# {{{ CDDL HEADER
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source. A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# }}}
#
# Copyright 2025 Peter Tribble
#

CFGDIR="/etc/zap"
ZAPLIBDIR="/usr/lib/zap"
ONAME=""
ODIR="/var/sadm/overlays"
DESTROOT=""

case $1 in
-R)
	DESTROOT="$2"
	CTXARGS="-C ${DESTROOT}"
	ODIR="${DESTROOT}/${ODIR}"
	shift
	shift
	if [ ! -d "$DESTROOT" ]; then
	    echo "ERROR: alternate root $DESTROOT doesn't exist"
	    exit 1
	fi
	if [ ! -d "$DESTROOT/var/sadm/pkg" ]; then
	    echo "ERROR: alternate root $DESTROOT is invalid"
	    exit 1
	fi
	;;
esac

#
# the new path, read the catalogs into two arrays
#
typeset -A map_ver
typeset -A map_repo

repolist=$(${ZAPLIBDIR}/zap-cfg ${CTXARGS} list-pkg-repos)
for repo in $repolist
do
    if [ -f "${CFGDIR}/repositories/${repo}.catalog" ]; then
	IFS='|'
	while read -r npkg nver line
	do
	    if [ -z "${map_ver[$npkg]}" ]; then
		# remember this if we've not seen it before
		map_ver[$npkg]=$nver
		map_repo[$npkg]=$repo
	    fi
	done < "${CFGDIR}/repositories/${repo}.catalog"
    fi
    unset IFS
done

do_verify_overlay() {
ONAME=$1

#
# An overlay must contain a .ovl file and a .pkgs file
#
OVL="${ODIR}/${ONAME}.ovl"
if [ ! -f "${OVL}" ]; then
    echo "ERROR: overlay ${ONAME} does not exist"
    return 1
fi
PLIST="${ODIR}/${ONAME}.pkgs"
if [ ! -f "${PLIST}" ]; then
    echo "ERROR: package list for ${ONAME} missing"
    return 1
fi

#
# if we're not installed then nothing else to verify
#
if [ ! -f "${ODIR}/installed/${ONAME}" ]; then
    echo "Overlay ${ONAME} is not installed"
    return 0
fi

STATUS=0

#
# first check dependencies on other overlays
#
for tovl in $(<"${OVL}")
do
    case $tovl in
	REQUIRES*)
	    novl=${tovl#REQUIRES=}
	    if [ ! -f "${ODIR}/installed/${novl}" ]; then
		echo "ERROR: prerequisite overlay ${novl} is not installed"
		STATUS=1
	    fi
	    ;;
    esac
done

#
# then check packages
#
# first report on any uninstalled packages
#
npkg=""
for pkg in $(<"${PLIST}")
do
  if [ ! -f "${DESTROOT}/var/sadm/pkg/${pkg}/pkginfo" ]; then
      echo "ERROR: member package ${pkg} is not installed"
      STATUS=1
  else
      npkg+=" ${pkg}"
  fi
done

#
# then check the installed versions match the catalog
#
for pkg in $npkg
do
    IVERSION=""
    while read -r line
    do
	case $line in
	    VERSION*)
		IVERSION=${line#*=}
		break
		;;
	esac
    done<"${DESTROOT}/var/sadm/pkg/${pkg}/pkginfo"
    AREPO=${map_repo[$pkg]}
    RVERSION=${map_ver[$pkg]}
    if [ "$AREPO" != "opensxce" ]; then
	if [ "X${IVERSION}" != "X${RVERSION}" ]; then
	    echo "WARN: member package ${pkg} needs updating to ${RVERSION}"
	    STATUS=2
	fi
    fi
done
}

case $# in
1)
	ONAME="$1"
	;;
*)
	echo "Usage: $0 [-R alt-root] overlay"
	exit 2
	;;
esac

#
# -a means all (installed) overlays
#
case $ONAME in
-a)
	cd "${ODIR}/installed" || exit 1
	for do_ovl in *
	do
	    echo "Checking overlay ${do_ovl}"
	    do_verify_overlay "${do_ovl}"
	done
	exit 0
	;;
esac

do_verify_overlay "$ONAME"
exit "$STATUS"
