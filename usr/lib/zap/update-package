#!/bin/ksh
#
# SPDX-License-Identifier: CDDL-1.0
#
# {{{ CDDL HEADER
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source. A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# }}}
#
# Copyright 2025 Peter Tribble
#

#
# update a package (if necessary)
#
# note that the check isn't that the available version is newer than the
# installed version, merely that it's different
#
# note also that if called with multiple packages, they are handled
# sequentially and in isolation
#
# note also that until opensxce packages are reversioned for zap, they will
# always show as needing update, so updates are explicitly disabled
#
ZAPLIBDIR="/usr/lib/zap"
ODIR="/var/sadm/overlays"
INSTODIR="${ODIR}"

case $1 in
-C)
	DESTROOT="$2"
	PKGARGS="-R ${DESTROOT}"
	CTXARGS="-C ${DESTROOT}"
	shift
	shift
	if [ ! -d "$DESTROOT" ]; then
	    echo "ERROR: alternate root $DESTROOT doesn't exist"
	    exit 1
	fi
	if [ ! -d "$DESTROOT/var/sadm/pkg" ]; then
	    echo "ERROR: alternate root $DESTROOT is invalid"
	    exit 1
	fi
	INSTODIR="${DESTROOT}/${ODIR}"
	OVLARGS="-C ${DESTROOT}"
	;;
esac

case $1 in
-R)
	DESTROOT="$2"
	PKGARGS="-R ${DESTROOT}"
	shift
	shift
	if [ ! -d "$DESTROOT" ]; then
	    echo "ERROR: alternate root $DESTROOT doesn't exist"
	    exit 1
	fi
	if [ ! -d "$DESTROOT/var/sadm/pkg" ]; then
	    echo "ERROR: alternate root $DESTROOT is invalid"
	    exit 1
	fi
	INSTODIR="${DESTROOT}/${ODIR}"
	OVLARGS="-R ${DESTROOT}"
	;;
esac

SRCLIST=$(${ZAPLIBDIR}/zap-cfg ${CTXARGS} cache-dir)

#
# if we have access to a global cache, prepend that
#
if [ -d /var/zap/global-cache ]; then
    SRCLIST="/var/zap/global-cache $SRCLIST"
fi

#
# prepend the given source to the list, so it gets searched first
#
case $1 in
-s)
	SRCEXTRA="$2"
	SRCARGS="-s ${SRCEXTRA}"
	shift
	shift
	if [ ! -d "$SRCEXTRA" ]; then
	    echo "ERROR: package source $SRCEXTRA doesn't exist"
	    exit 1
	fi
	SRCLIST="$SRCEXTRA $SRCLIST"
	;;
esac

#
# if we're passed an overlay, treat it as such
#
for ovl in "$@"
do
    if [ -f "${INSTODIR}/${ovl}.ovl" ]; then
	if [ -f "${INSTODIR}/installed/${ovl}" ]; then
	    echo "Updating matching overlay $ovl"
	    ${ZAPLIBDIR}/update-overlay ${OVLARGS} ${SRCARGS} "$ovl"
	fi
    fi
done

${ZAPLIBDIR}/get-version ${CTXARGS} $(${ZAPLIBDIR}/resolve-alias ${CTXARGS} "$@") | while read -r AFVERSION
do
    AVERSION=${AFVERSION% *}
    AREPO=${AFVERSION#* }
    RVERSION=${AVERSION#*.}
    pkg=${AVERSION%%.*}
    if [ ! -f "${DESTROOT}/var/sadm/pkg/${pkg}/pkginfo" ]; then
	${ZAPLIBDIR}/install-pkg ${CTXARGS} ${PKGARGS} ${SRCARGS} "$pkg"
    else
	IVERSION=""
	while read -r line
	do
	    case $line in
		VERSION*)
		    IVERSION=${line#*=}
		    break
		    ;;
	    esac
	done<"${DESTROOT}/var/sadm/pkg/${pkg}/pkginfo"
	if [ "$AREPO" != "opensxce" ]; then
	    if [ "X${pkg}.${IVERSION}" != "X${AVERSION}" ]; then
		echo "Package $pkg is at version $IVERSION and needs updating to $RVERSION"
		ISINST="false"
		for SRCDIR in $SRCLIST
		do
		    if [ -f "${SRCDIR}/${AVERSION}.zap" ]; then
			ISINST="true"
			break
		    fi
		done
		# download if we don't have it yet
		if [ "$ISINST" = "false" ]; then
		    ${ZAPLIBDIR}/retrieve-pkg ${CTXARGS} "${pkg}"
		fi
		for SRCDIR in $SRCLIST
		do
		    if [ -f "${SRCDIR}/${AVERSION}.zap" ]; then
			${ZAPLIBDIR}/delpkg -u ${PKGARGS} "$pkg"
			${ZAPLIBDIR}/instzap -u ${PKGARGS} "${SRCDIR}/${AVERSION}.zap" "${pkg}"
			break
		    fi
		done
		NVERSION=$(/usr/bin/awk -F= '{if ($1 == "VERSION") print $2}' "${DESTROOT}/var/sadm/pkg/${pkg}/pkginfo")
		if [ "X${NVERSION}" = "X${RVERSION}" ]; then
		    echo "Update of $pkg successful."
		fi
	    fi
	fi
    fi
done
