#!/bin/ksh
#
# SPDX-License-Identifier: CDDL-1.0
#
# {{{ CDDL HEADER
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source. A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# }}}
#
# Copyright 2025 Peter Tribble
#

CFGDIR="/etc/zap"
ZAPLIBDIR="/usr/lib/zap"

case $1 in
-C)
	DESTROOT="$2"
	CTXARGS="-C ${DESTROOT}"
	shift
	shift
	if [ ! -d "$DESTROOT" ]; then
	    echo "ERROR: alternate root $DESTROOT doesn't exist"
	    exit 1
	fi
	if [ ! -d "$DESTROOT/var/sadm/pkg" ]; then
	    echo "ERROR: alternate root $DESTROOT is invalid"
	    exit 1
	fi
	CFGDIR="${DESTROOT}/${CFGDIR}"
	;;
esac

#
# given an unqualified package, return a qualified package and the name
# of the repo it's contained in
#
repolist=$(${ZAPLIBDIR}/zap-cfg ${CTXARGS} list-pkg-repos)

#
# there are two paths here
#
# for very few packages, simply look in the catalog for each
#
# for a larger number of packages, slurp the catalogs into arrays
# and query the internal arrays, which has a higher setup cost
#
# the actual boundary here is a bit of a guess, but is based on
# timing 'verify-overlay -a'
#
if [ $# -lt 7 ]; then

#
# the old path, simply read through the catalogs for each package
#
for PKG in "$@"
do
    PFOUND=""
    for repo in $repolist
    do
	if [ -f "${CFGDIR}/repositories/${repo}.catalog" ]; then
	    IFS='|'
	    while read -r npkg nver line
	    do
		if [ "$npkg" = "$PKG" ]; then
		    echo "${npkg}.${nver} ${repo}"
		    PFOUND="y"
		    break 2
		fi
	    done < "${CFGDIR}/repositories/${repo}.catalog"
	fi
    done
    unset IFS
    if [ -z "$PFOUND" ]; then
	echo "$PKG"
    fi
done

else

#
# the new path, read the catalogs into two arrays
#
typeset -A map_ver
typeset -A map_repo

for repo in $repolist
do
    if [ -f "${CFGDIR}/repositories/${repo}.catalog" ]; then
	IFS='|'
	while read -r npkg nver line
	do
	    if [ -z "${map_ver[$npkg]}" ]; then
		# remember this if we've not seen it before
		map_ver[$npkg]=$nver
		map_repo[$npkg]=$repo
	    fi
	done < "${CFGDIR}/repositories/${repo}.catalog"
    fi
    unset IFS
done

for PKG in "$@"
do
    if [ -n "${map_ver[$PKG]}" ]; then
	echo "${PKG}.${map_ver[$PKG]}" "${map_repo[$PKG]}"
    else
	echo "$PKG"
    fi
done

fi
