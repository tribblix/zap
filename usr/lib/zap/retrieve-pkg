#!/bin/ksh
#
# SPDX-License-Identifier: CDDL-1.0
#
# {{{ CDDL HEADER
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source. A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# }}}
#
# Copyright 2023 Peter Tribble
#

ZAPLIBDIR="/usr/lib/zap"
GPGEXE="/usr/bin/gpg"

case $1 in
-C)
	DESTROOT="$2"
	CTXARGS="-C ${DESTROOT}"
	shift
	shift
	if [ ! -d "$DESTROOT" ]; then
	    echo "ERROR: alternate root $DESTROOT doesn't exist"
	    exit 1
	fi
	;;
esac

CACHE_DIR=$(${ZAPLIBDIR}/zap-cfg ${CTXARGS} cache-dir)
USER_AGENT="zap"/$(${ZAPLIBDIR}/zap-cfg pkgversion)
ZAP_PROXY=$(${ZAPLIBDIR}/zap-cfg ${CTXARGS} proxy)
# signed package verification requires gnupg be installed
if [ ! -x ${GPGEXE} ]; then
    SIGN_POLICY="no"
else
    SIGN_POLICY="if-signed"
fi

if [ -n "$ZAP_PROXY" ]; then
    http_proxy=$ZAP_PROXY
    export http_proxy
fi

WCLIENT=/usr/bin/curl
WARGS="-A ${USER_AGENT} -f -s -o"
if [ ! -x $WCLIENT ]; then
    WCLIENT=/usr/bin/wget
    WARGS="-U ${USER_AGENT} -q -O"
fi
if [ ! -x $WCLIENT ]; then
    WCLIENT=/usr/bin/wget2
    WARGS="-U ${USER_AGENT} -q -O"
fi

#
# the verification here is mostly for debugging at this time
#
for pkg in "$@"
do
    ${ZAPLIBDIR}/get-pkg-meta ${CTXARGS} "$pkg" | read fpkg fver fsize fhash frepo
    if [ -n "$frepo" ]; then
	fpkgname="${fpkg}.${fver}.zap"
	zfile="${CACHE_DIR}/${fpkgname}"
	REPO=$(${ZAPLIBDIR}/zap-cfg ${CTXARGS} repo-url "$frepo")
	echo "Fetching ${REPO}/${fpkgname}"
	${WCLIENT} ${WARGS} "${zfile}" "${REPO}/${fpkgname}"
	PSIZE=$(/bin/ls -l "${zfile}" | /usr/bin/awk '{print $5}')
	if [ "X$PSIZE" != "X$fsize" ]; then
	    echo "Download $zfile has wrong size"
	else
	    PKGMD5=$(/usr/bin/digest -a md5 "${zfile}")
	    if [ "X$PKGMD5" != "X$fhash" ]; then
		echo "Download $zfile has wrong checksum"
	    else
		echo "Download $zfile checksum verified"
		if [ "X$SIGN_POLICY" != "Xno" ]; then
		    SIGNER=$(${ZAPLIBDIR}/zap-cfg ${CTXARGS} repo-signer "$frepo")
		    if [ "X$SIGNER" != "Xno" ]; then
			${WCLIENT} ${WARGS} "${zfile}.sig" "${REPO}/${fpkgname}.sig"
			if [ -f "${zfile}.sig" ]; then
			    ${GPGEXE} --no-options --homedir "/etc/zap/sign/${SIGNER}" --verify "${zfile}.sig" "${zfile}" 2>/dev/null
			    SIGN_OK=$?
			    if [ $SIGN_OK -eq 0 ]; then
				echo "Signature verified"
			    else
				echo "Signature verification failed"
			    fi
			else
			    echo "ERROR: missing signature ${zfile}.sig"
			fi
		    fi
		fi
	    fi
	fi
    fi
done
